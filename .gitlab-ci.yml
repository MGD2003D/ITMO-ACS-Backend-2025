stages:
  - build
  - deploy

.build_template: &build_definition
  stage: build
  image: docker:latest
  services:
    - docker:dind
  variables:
    DOCKER_HOST: "tcp://docker:2375/"
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
  script:
    - docker build -f ./services/${SERVICE_NAME}/Dockerfile -t ${DOCKERHUB_USERNAME}/${SERVICE_NAME}:${CI_COMMIT_SHORT_SHA} -t ${DOCKERHUB_USERNAME}/${SERVICE_NAME}:latest .
    - docker push ${DOCKERHUB_USERNAME}/${SERVICE_NAME} --all-tags

build-api-gateway:
  <<: *build_definition
  variables:
    SERVICE_NAME: api-gateway

build-auth-users:
  <<: *build_definition
  variables:
    SERVICE_NAME: auth-users

build-recipes:
  <<: *build_definition
  variables:
    SERVICE_NAME: recipes

build-interactions:
  <<: *build_definition
  variables:
    SERVICE_NAME: interactions

build-notifications:
  <<: *build_definition
  variables:
    SERVICE_NAME: notifications-service

deploy-to-server:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh && chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - eval "$(ssh-agent -s)" && ssh-add ~/.ssh/id_rsa
    - ssh-keyscan -H "$SERVER_HOST" >> ~/.ssh/known_hosts
  script:
    - ssh "$SERVER_USERNAME"@"$SERVER_HOST" "cd ~/ITMO_BACKEND &&
      echo \"$DOCKERHUB_TOKEN\" | docker login -u \"$DOCKERHUB_USERNAME\" --password-stdin &&
      docker compose pull &&
      docker compose down &&
      docker compose up -d &&
      docker image prune -f"